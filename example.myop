-- eval is aborted, when bottom is called, but here's a forever-looping def
bottom : N -> N
bottom = M(C(S,I[1,2]))

id   = I[1,1]
plus = P(id, C(S, I[2,3]))

double = C(plus, I[1,1], I[1,1])

c1 = C(S,Z)
c2 = C(S,c1)
c3 = C(S,c2)
c6 = C(double, c3)

pred = C(P(Z, I[1,3]), id, Z)
predP = C(pred, C(if0P, id, id))

max = C(plus, C(mult, C(gt0, C(minus, I[1,2], I[2,2])), I[1,2]),
              C(mult, C(gt0, C(minus, I[2,2], I[1,2])), I[2,2]))

minus = C(P(id, C(pred, I[2,3])), I[2,2], I[1,2])
diff = C(plus, C(minus, I[1,2], I[2,2]), C(minus, I[2,2], I[1,2]))

minusP = C(P(id, C(predP, I[2,3])), I[2,2], I[1,2])

or = plus
and = mult

eq0 = not
gt0 = C(P(Z, I[3,3]), id, c1)
gt = C(gt0, minus)
lt = C(C(gt0, minus), I[2,2], I[1,2])
lte = C(not, gt)
gte = C(not, lt)

-- Clearer but less efficient definition: not = C(minus, c1, id)
not = C(P(C(S, I[1,1]), C(Z, I[1,3])), I[1,1], I[1,1])
sgn = C(P(Z, C(S, I[3,3])), I[1,1], Z)

if0P = P(bottom, I[3,3])

mult = P(Z, C(plus, I[2,3], I[3,3]))

rem  = P(Z, C(mult,C(sgn, I[3,3]), C(mult, C(S, I[2,3]), C(sgn, C(diff, C(S, I[2,3]), I[3,3])))))
quot = P(Z, C(mult, C(sgn, I[3,3]), C(plus, I[2,3], C(not, C(diff, C(S, C(rem, I[1,3], I[3,3])), I[3,3])))))
div = C(minus, C(c1, I[1,2]), C(sgn, C(rem, I[1,2], I[2,2])))

fac : N -> N
fac = C(P(c1, C(mult, I[2,3], C(S, I[1,3]))), id, Z)

exp : N x N -> N
exp = C(P(c1, C(mult, I[2,3], I[3,3])), I[2,2], I[1,2])

lo : N x N -> N
lo = M(C(and, C(div, I[3,3], C(exp, I[2,3], I[1,3])), C(div, I[3,3], C(exp, I[2,3], C(S, I[1,3])))))

-- pair(x,y) = 2^x 3^y
pair : N x N -> N
pair = C(mult, C(exp, C(c2, I[1,2]), I[1,2]), C(exp, C(c3, I[2,2]), I[2,2]))

-- projection functions for pairs
p1 = C(lo, c2, id)
p2 = C(lo, c3, id)

id1 = C(p1, pair)
id2 = C(p2, pair)

fib = C(p1, C(P(c6, C(pair, C(p2, I[2,3]), C(plus, C(p2, I[2,3]), C(p1, I[2,3])))), id, id))

c4 = C(S, c3)
c5 = C(S, c4)
c6 = C(S, c5)
c7 = C(S, c6)
c8 = C(S, c7)
c9 = C(S, c8)
c10 = C(S, c9)
c11 = C(S, c10)
c12 = C(S, c11)
c13 = C(S, c12)
c26 = C(double, c13)
c32 = C(mult, c4, c8)
c33 = C(S, c32)
c52 = C(mult, c4, c13)
c63 = C(mult, c7, c9)
c65 = C(S, C(double, c32))
c72 = C(mult, c8, c9)
c78 = C(mult, c6, c13)
c84 = C(mult, c7, c12)
c90 = C(mult, c9, c10)
c97 = C(plus, c7, c90)
c100 = C(mult, c10, c10)
c101 = C(S, c100)
c108 = C(plus, c100, c8)
c109 = C(S, c108)
c111 = C(S, C(plus, c100, c10))
c114 = C(plus, c111, c3)
c119 = C(plus, c111, c8)
c122 = C(plus, c3, c119)

eq = C(not, C(diff, I[1,2], I[2,2]))

plus7 = C(plus, C(plus, C(plus, C(plus, C(plus, C(plus, I[1,7], I[2,7]), I[3,7]), I[4,7]), I[5,7]), I[6,7]), I[7,7])
plus13 = C(plus, C(plus, C(plus, C(plus, C(plus, C(plus, C(plus, C(plus, C(plus, C(plus, C(plus, C(plus, I[1,13], I[2,13]), I[3,13]), I[4,13]), I[5,13]), I[6,13]), I[7,13]), I[8,13]), I[9,13]), I[10,13]), I[11,13]), I[12,13]), I[13,13])
hw : N -> N
hw = C(plus13,
        C(mult, C(eq,  Z, id), c72),
        C(mult, C(eq, c1, id), c101),
        C(mult, C(eq, c2, id), c108),
        C(mult, C(eq, c3, id), c108),
        C(mult, C(eq, c4, id), c111),
        C(mult, C(eq, c5, id), c32),
        C(mult, C(eq, c6, id), c119),
        C(mult, C(eq, c7, id), c111),
        C(mult, C(eq, c8, id), c114),
        C(mult, C(eq, c9, id), c108),
        C(mult, C(eq,c10, id), c100),
        C(mult, C(eq,c11, id), c33),
        C(mult, C(eq,c12, id), c10))

-- placeholders for IO buildins
ioChar = id
trace = id

cat : N -> N
cat = ioChar

-- between(x,y,z): "x between y and z"
between : N x N x N -> N
between = C(and, C(gte, I[1,3], I[2,3]), C(lte, I[1,3], I[3,3]))

rot13 : N -> N
rot13 = C(C(plus,
              C(mult,
                C(between, id, c65, c90),
                C(plus, C(rem, C(minus, id, c52), c26), c65)),
              C(plus,
                C(mult,
                  C(between, id, c97, c122),
                  C(plus, C(rem, C(minus, id, c84), c26), c97)),
                C(mult,
                  C(not, C(or, C(between, id, c65, c90), C(between, id, c97, c122))),
                  id))),
          ioChar)

-- an interactive program!
askname : N -> N
askname = C(plus13,
              C(mult, C(eq,  Z, id), c78),
              C(mult, C(eq, c1, id), c97),
              C(mult, C(eq, c2, id), c109),
              C(mult, C(eq, c3, id), c101),
              C(mult, C(eq, c4, id), c63),
              C(mult, C(eq, c5, id), c32),
              C(mult, C(eq, c6, id), c72),
              C(mult, C(eq, c7, id), c101),
              C(mult, C(eq, c8, id), c108),
              C(mult, C(eq, c9, id), c108),
              C(mult, C(eq,c10, id), c111),
              C(mult, C(eq,c11, id), c32),
              C(mult, C(lt,c11, id), C(ioChar, C(minus, id, c12))))
